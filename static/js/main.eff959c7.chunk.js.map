{"version":3,"sources":["components/score.js","components/header.js","components/wrapper.js","components/token.js","components/button.js","components/table.js","components/rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrapperStyled","Wrapper","children","shadow","keyframes","box","TokenStyled","color","base","border","isShadowAnimated","name","playing","colors","paper","rock","scissors","default","Token","onClick","className","src","alt","ButtonStyled","WhiteButton","Button","props","TableStyled","result","elements","Table","setScore","useState","setPlaying","housePick","setHousePick","pick","setPick","setResult","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","console","log","results","analizeGame","RulesStyled","visible","Rules","setVisible","handleToggleClick","createContext","AppStyled","main","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+5BAMA,IAAMA,EAAcC,IAAOC,IAAV,KA6CFC,MAVf,WAAkB,IACRC,EAAUC,qBAAWC,GAArBF,MACR,OACE,kBAACJ,EAAD,KACE,wCACA,2BAAII,K,8kBCxCV,IAAMG,EAAeN,IAAOC,IAAV,KAuCHM,MAbf,WACE,OACE,kBAACD,EAAD,KACE,oCACO,6BADP,SAEQ,6BAFR,YAKA,kBAAC,EAAD,Q,6GCpCN,IAAME,EAAgBR,IAAOC,IAAV,KAWJQ,MANf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OACE,kBAACF,EAAD,KAAgBE,I,syCCRpB,IAAMC,EAASC,YAAH,KASNC,EAAMD,YAAH,KAMHE,EAAcd,IAAOC,IAAV,KAGM,SAACc,GAAD,OAAWA,EAAMA,MAAMC,QAItB,SAACD,GAAD,OAAWA,EAAMA,MAAME,UAI3C,qBAAGC,kBAA2C,wHAChC,qBAAGA,iBAA0CP,EAAS,MAOtD,kBAAwB,YAAxB,EAAGQ,KAAiC,UAAY,WACvC,kBAAwB,YAAxB,EAAGA,KAAiC,cAAgB,aASzD,qBAAGD,iBAA0CL,EAAM,MAKnE,qBAAGO,QAAwB,mDAAqD,kCAQhFC,EAAS,CACbC,MAAO,CACLN,KAAM,UACNC,OAAQ,WAEVM,KAAM,CACJP,KAAM,UACNC,OAAQ,WAEVO,SAAU,CACRR,KAAM,UACNC,OAAQ,WAEVQ,QAAS,CACPT,KAAM,cACNC,OAAQ,gBA4BGS,MAxBf,YAAkF,IAAD,IAAhEP,YAAgE,MAAzD,UAAyD,EAA9CQ,EAA8C,EAA9CA,QAA8C,IAArCT,wBAAqC,SAAXE,EAAW,EAAXA,QAO9DL,EAAQM,EAAOF,GAErB,OACE,kBAACL,EAAD,CAAaC,MAAOA,EAAOY,QAT7B,WACMA,GACFA,EAAQR,IAOuCA,KAAMA,EAAMD,iBAAkBA,EAAkBE,QAASA,GACxG,yBAAKQ,UAAU,OAEF,YAATT,GACE,yBAAKU,IAAG,wBAAmBV,EAAnB,QAA+BW,IAAI,iB,+hBC1FvD,IAAMC,EAAe/B,IAAOC,IAAV,KA0BX,IAAM+B,EAAchC,YAAO+B,EAAP/B,CAAH,KAMTiC,EAbf,YAAyC,IAAvBvB,EAAsB,EAAtBA,SAAawB,EAAS,4BACtC,OACE,kBAACH,EAAiBG,EACfxB,I,g0DCjBP,IAAMyB,EAAcnC,IAAOC,IAAV,KA+BF,qBAAGmB,QAAmC,OAAV,WAmCrC,gBAAGA,EAAH,EAAGA,QAASgB,EAAZ,EAAYA,OAAZ,OAA0BhB,GAAWgB,GAAW,qDAG9C,gBAAGhB,EAAH,EAAGA,QAASgB,EAAZ,EAAYA,OAAZ,OAA0BhB,GAAWgB,GAAW,sCA2BlDC,EAAW,CACf,QACA,WACA,QAkIaC,MA/Hf,WAAkB,IAAD,EAEalC,qBAAWC,GAA/BF,EAFO,EAEPA,MAAOoC,EAFA,EAEAA,SAFA,EAGeC,oBAAS,GAHxB,mBAGRpB,EAHQ,KAGCqB,EAHD,OAImBD,mBAAS,WAJ5B,mBAIRE,EAJQ,KAIGC,EAJH,OAKSH,mBAAS,IALlB,mBAKRI,EALQ,KAKFC,EALE,OAMaL,mBAAS,IANtB,mBAMRJ,EANQ,KAMAU,EANA,KAYf,SAASC,IACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIN,EACEO,EAAWC,aAAY,WANjC,IAAsBC,EAAKC,EAOrBV,EAAOP,GAPSgB,EAOa,EAPRC,EAOW,EAN7BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,IAO7CV,EAAaC,KACZ,IACHc,YAAW,WACTC,cAAcR,GACdF,EAAQL,KACP,QAtBQ,SAgCAjB,EAhCA,8EAgCf,WAAuBR,GAAvB,iBAAAyC,EAAA,6DACEnB,GAAW,GACXI,EAAQ1B,GAFV,SAGsB4B,IAHtB,OAGQc,EAHR,OAIEC,QAAQC,IAAI,oBAAkBF,GACxBG,EAAUC,EAAY9C,EAAM0C,GAClCf,EAAUkB,GACVF,QAAQC,IAAIC,GACI,QAAZA,IACFzB,EAASpC,EAAQ,GAEjB2D,QAAQC,IAAI5D,IAXhB,6CAhCe,sBA+Cf,SAAS8D,EAAYrB,EAAMF,GAEzB,GADAoB,QAAQC,IAAI,eAAgBnB,GACxBF,IAAcE,EAChB,MAAO,OAET,OAAQA,GACN,IAAK,QACH,MAAkB,aAAdF,EACK,OAEF,MAGT,IAAK,WACH,MAAkB,UAAdA,EACK,MAEF,OAGT,IAAK,OACH,MAAkB,UAAdA,EACK,OAEF,OAab,OACE,kBAACP,EAAD,CAAaf,QAASA,EAASgB,OAAQA,GACrC,oCACE,0BAAMR,UAAU,SAEZR,EAQE,oCACE,yBAAKQ,UAAU,WACb,kBAAC,EAAD,CAAOR,QAASA,EAASD,KAAMyB,EAAM1B,iBAA8B,QAAXkB,IACxD,0CAEF,yBAAKR,UAAU,WACb,kBAAC,EAAD,CAAOR,QAASA,EAASD,KAAMuB,EAAWxB,iBAA8B,SAAXkB,IAC7D,gDAEF,yBAAKR,UAAU,WAEXQ,GACE,oCACE,mCAASA,GACT,kBAACJ,EAAD,CAAaL,QAhCnC,WACEc,GAAW,GACXK,EAAU,MA8BU,iBArBZ,oCACE,kBAAC,EAAD,CAAO3B,KAAK,OAAOQ,QAASA,IAC5B,kBAAC,EAAD,CAAOR,KAAK,WAAWQ,QAASA,IAChC,kBAAC,EAAD,CAAOR,KAAK,QAAQQ,QAASA,Q,m3CCtM3C,IAAMuC,EAAclE,IAAOC,IAAV,KAKA,qBAAGkE,QAAwB,QAAU,UAsFvCC,MAvBf,WAAkB,IAAD,EACe5B,oBAAS,GADxB,mBACR2B,EADQ,KACCE,EADD,KAEf,SAASC,IACPD,GAAYF,GAEd,OACE,kBAACD,EAAD,CAAaC,QAASA,GAEjBA,GACC,yBAAKvC,UAAU,eACb,qCACA,yBAAKC,IAAI,2BAA2BC,IAAI,kBACxC,yBAAKF,UAAU,eAAeD,QAAS2C,EAAmBzC,IAAI,6BAIpE,kBAAC,EAAD,CAAQF,QAAS2C,EAAmB1C,UAAU,UAA9C,W,qjBC9EC,IAAMvB,EAAekE,0BAEtBC,EAAYxE,IAAOyE,KAAV,KA0CAC,MApBf,WAAgB,IAAD,EACalC,mBAAS,GADtB,mBACNrC,EADM,KACCoC,EADD,KAEb,OACE,kBAAClC,EAAasE,SAAd,CAAuBC,MAAO,CAC5BzE,QACAoC,aAEA,kBAACiC,EAAD,KACE,kBAAC,EAAD,KACE,yBAAK5C,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WCnCQiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.eff959c7.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ScoreContext } from '../App';\r\n\r\nconst ScoreStyled = styled.div`\r\n  background: white;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  border-radius: 8px;\r\n  width: 80px;\r\n\r\n  small {\r\n    color: #2A45C2;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n  }\r\n  p {\r\n    color: #565468;\r\n    font-size: 40px;\r\n    margin:0;\r\n    font-weight: 800;\r\n    font-family: Arial;\r\n    letter-spacing: -6px;\r\n    position: relative;\r\n    left: -3px;\r\n  }\r\n  @media screen and (min-width: 768px){\r\n    padding: 10px 20px;\r\n    small {\r\n    font-size: 18px;\r\n    }\r\n    p {\r\n    font-size: 50px;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nfunction Score() {\r\n  const { score } = useContext(ScoreContext);\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>{score}</p>\r\n    </ScoreStyled>\r\n  )\r\n}\r\n\r\nexport default Score;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Score from './score';\r\n\r\nconst HeaderStyled = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 12px 12px 23px;\r\n  border-radius: 0.5em;\r\n  border: 3px solid rgba(255, 255, 255, 0.29);\r\n  /* min-width: 240px;\r\n  max-width: 400px; */\r\n  h1 {\r\n    font-size: 18px;\r\n    line-height: 16px;\r\n    /* font-weight: 700; */\r\n    text-transform: uppercase;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 20px;\r\n    h1 {\r\n      font-size: 36px;\r\n      line-height: 0.9;\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>\r\n        Rock <br />\r\n        Paper <br />\r\n        Scissors\r\n      </h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 700px;\r\n  margin: auto;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return (\r\n    <WrapperStyled>{children}</WrapperStyled>\r\n  )\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst shadow = keyframes`\r\n  /* from {\r\n    box-shadow: box-shadow: 0 0 0 0px rgba(255,255,255,0.04),  0 0 0 0px rgba(250,250,250,0.03), 0 0 0 90px rgba(250,250,250,0.02);\r\n  } */\r\n  to {\r\n    box-shadow: 0 0 0 30px rgba(255,255,255,0.04),  0 0 0 60px rgba(250,250,250,0.03), 0 0 0 90px rgba(250,250,250,0.02);\r\n    transform:  scale(1.1);\r\n  }\r\n`\r\nconst box = keyframes`\r\n  to {\r\n    transform: rotateY(360deg);\r\n  }\r\n`\r\n\r\nconst TokenStyled = styled.div`\r\n  width:  130px;\r\n  height: 125px;\r\n  border: 16px solid ${(color) => color.color.base};\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  box-shadow: 0 6px 0 ${(color) => color.color.border};\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 2;\r\n  ${({ isShadowAnimated }) => isShadowAnimated && 'box-shadow: 0 0 0 0px rgba(255,255,255,0.04),  0 0 0 0px rgba(250,250,250,0.03), 0 0 0 0px rgba(250,250,250,0.02);'}\r\n  animation: 1s ${({ isShadowAnimated }) => isShadowAnimated ? shadow : ''} forwards;\r\n\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  .box {\r\n    background: ${({ name }) => (name === 'default' ? '#122343' : 'white')};\r\n    box-shadow: 0 -4px 0 ${({ name }) => (name === 'default' ? 'transparent' : '#babfd4')};\r\n    border-radius: 50%;\r\n    flex: 1;\r\n    align-self: stretch;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    img {\r\n      width: 40%;\r\n      animation: 1s ${({ isShadowAnimated }) => isShadowAnimated ? box : ''};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px){\r\n    ${({ playing }) => playing ? 'width: 300px; height: 295px; border-width: 32px;' : 'width: 200px; height: 195px;'}\r\n\r\n  }\r\n  /* @media screen and (min-width: 1024px){\r\n    border-width: 32px;\r\n  } */\r\n`\r\n\r\nconst colors = {\r\n  paper: {\r\n    base: '#516ef4',\r\n    border: '#2543c3'\r\n  },\r\n  rock: {\r\n    base: '#de3a5a',\r\n    border: '#980e31',\r\n  },\r\n  scissors: {\r\n    base: '#eca81e',\r\n    border: '#c76c14',\r\n  },\r\n  default: {\r\n    base: 'transparent',\r\n    border: 'transparent',\r\n  }\r\n}\r\n\r\nfunction Token({ name = 'default', onClick, isShadowAnimated = false, playing }) {\r\n  function handleClick() {\r\n    if (onClick) {\r\n      onClick(name);\r\n    }\r\n  }\r\n\r\n  const color = colors[name];\r\n\r\n  return (\r\n    <TokenStyled color={color} onClick={handleClick} name={name} isShadowAnimated={isShadowAnimated} playing={playing}>\r\n      <div className=\"box\">\r\n        {\r\n          name !== 'default' && (\r\n            <img src={`./images/icon-${name}.svg`} alt=\"icon-game\" />\r\n          )\r\n        }\r\n\r\n      </div>\r\n\r\n    </TokenStyled>\r\n  )\r\n}\r\n\r\nexport default Token;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.div`\r\n  display: inline-flex;\r\n  border: 1px solid white;\r\n  border-radius: .5em;\r\n  min-width: 128px;\r\n  padding: 1em;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2.5px;\r\n  :hover {\r\n    background: white;\r\n    color: #101a3f;\r\n    font-weight: 800;\r\n  }\r\n`\r\n\r\n\r\nfunction Button({ children, ...props }) {\r\n  return (\r\n    <ButtonStyled {...props}>\r\n      {children}\r\n    </ButtonStyled>\r\n  )\r\n}\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  background: white;\r\n  color: #101a3f;\r\n  min-width: 220px;\r\n`\r\n\r\nexport default Button;","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport Token from './token';\nimport { WhiteButton } from './button';\n\nimport { ScoreContext } from '../App';\n\nconst TableStyled = styled.div`\n  display: grid;\n  grid-template-columns: 130px 130px;\n  justify-content: center;\n  justify-items: center;\n  grid-gap: 30px 50px;\n  margin: 2em 0;\n  position: relative;\n\n  & div:nth-of-type(3) {\n    grid-column: span 2;\n  }\n\n  .in-game {\n    text-align: center;\n    text-transform: uppercase;\n    font-size: .8em;\n    font-weight: 700;\n    letter-spacing: 1px;\n  }\n\n  .results {\n    text-align: center;\n    h2 {\n      text-transform: uppercase;\n      font-size: 56px;\n      margin: 10px;\n    }\n  }\n\n  .line {\n    display: ${({ playing }) => !playing ? 'block' : 'none'};\n    height: 14px;\n    background: rgba(0,0,0,.2);\n    position: absolute;\n    width: 230px;\n    /* left: 85px;\n    right: 88px; */\n    top: 50px;\n    &:before {\n      content: '';\n      height: 14px;\n      background: rgba(0,0,0,.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(60deg);\n      transform-origin: left top;\n    }\n    &:after {\n      content: '';\n      height: 14px;\n      background: rgba(0,0,0,.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(-60deg);\n      transform-origin: right top;\n    }\n  }\n\n  @media screen and (min-width: 1024px){\n     /* grid-gap: 30px 140px; */\n    grid-template-columns: 300px 300px;\n    ${({ playing, result }) => (playing && result) && 'grid-template-columns: 300px 110px 110px 300px;'}\n\n    & div:nth-of-type(3) {\n      ${({ playing, result }) => (playing && result) && 'grid-column: 2 / 4; grid-row: 1;'}\n    }\n    .line {\n      width: 330px;\n\n    }\n    .results {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n\n    .in-game {\n      font-size: 1.3em;\n      display: flex;\n      flex-direction: column;\n      >div {\n        order: 2;\n      }\n      >p {\n        order: 1;\n        margin-bottom: 2em;\n      }\n    }\n  }\n`\nconst elements = [\n  'paper',\n  'scissors',\n  'rock',\n];\n\nfunction Table() {\n\n  const { score, setScore } = useContext(ScoreContext);\n  const [playing, setPlaying] = useState(false);\n  const [housePick, setHousePick] = useState('default');\n  const [pick, setPick] = useState('');\n  const [result, setResult] = useState('');\n\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  function launchHousePick() {\n    return new Promise((resolve, reject) => {\n      let pick;\n      const interval = setInterval(() => {\n        pick = elements[getRandomInt(0, 3)];\n        setHousePick(pick);\n      }, 75)\n      setTimeout(() => {\n        clearInterval(interval);\n        resolve(pick);\n      }, 2000);\n    })\n    // setInterval(() => {\n    //   const pick = elements[getRandomInt(0, 3)];\n    //   console.log(pick);\n    //   setHousePick(pick);\n    // }, 100);\n\n  }\n\n  async function onClick(name) {\n    setPlaying(true);\n    setPick(name);\n    const house = await launchHousePick();\n    console.log('la casa eligió', house);\n    const results = analizeGame(name, house);\n    setResult(results);\n    console.log(results);\n    if (results === 'win') {\n      setScore(score + 1);\n\n      console.log(score);\n    }\n  }\n\n  function analizeGame(pick, housePick) {\n    console.log('Tu elegiste ', pick);\n    if (housePick === pick) {\n      return 'draw';\n    }\n    switch (pick) {\n      case 'paper': {\n        if (housePick === 'scissors') {\n          return 'lose';\n        }\n        return 'win';\n      }\n\n      case 'scissors': {\n        if (housePick === 'paper') {\n          return 'win';\n        }\n        return 'lose';\n      }\n\n      case 'rock': {\n        if (housePick === 'paper') {\n          return 'lose';\n        }\n        return 'win';\n      }\n\n      default:\n        break;\n    }\n  }\n\n  function handleTryAgain() {\n    setPlaying(false);\n    setResult('');\n  }\n\n  return (\n    <TableStyled playing={playing} result={result}>\n      <>\n        <span className=\"line\" />\n        {\n          (!playing) ? (\n            <>\n              <Token name=\"rock\" onClick={onClick} />\n              <Token name=\"scissors\" onClick={onClick} />\n              <Token name=\"paper\" onClick={onClick} />\n            </>\n\n          ) : (\n              <>\n                <div className=\"in-game\">\n                  <Token playing={playing} name={pick} isShadowAnimated={(result === 'win')} />\n                  <p>You Picked</p>\n                </div>\n                <div className=\"in-game\">\n                  <Token playing={playing} name={housePick} isShadowAnimated={(result === 'lose')} />\n                  <p>The house Picked</p>\n                </div>\n                <div className=\"results\">\n                  {\n                    result && (\n                      <>\n                        <h2>YOU {result}</h2>\n                        <WhiteButton onClick={handleTryAgain} >\n                          Play again\n                      </WhiteButton>\n                      </>\n                    )\n                  }\n\n\n                </div>\n              </>\n            )\n        }\n      </>\n    </TableStyled>\n  )\n}\nexport default Table;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from './button';\r\n\r\nconst RulesStyled = styled.div`\r\n  /* margin: auto auto; */\r\n  text-align: center;\r\n  &::before {\r\n      content: '';\r\n      display: ${({ visible }) => visible ? 'block' : 'none'};\r\n      position: absolute;\r\n      z-index: 2;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      background: rgba(0,0,0, 0.6);\r\n  }\r\n  .rules-modal {\r\n    background: white;\r\n    padding: 4em 0;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    z-index: 3;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    h2 {\r\n      color: #3b4262;\r\n      text-transform: uppercase;\r\n      font-weight: bold;\r\n      letter-spacing: -2px;\r\n      margin-bottom: 1em;\r\n    }\r\n    .close-button {\r\n      margin-top: 2em;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px){\r\n   .button {\r\n      position: fixed;\r\n      right: 1.5em;\r\n      bottom: 1.5em;\r\n   }\r\n   .rules-modal {\r\n      width: 400px;\r\n      margin: auto;\r\n      top: 0;\r\n      bottom: initial;\r\n      transform: translateY(50%);\r\n      border-radius: 10px;\r\n      padding: 2em;\r\n      box-sizing: border-box;\r\n      h2 {\r\n        font-size: 32px;\r\n        align-self: flex-start;\r\n        margin: 0 0 1.2em 0;\r\n      }\r\n   }\r\n   .close-button {\r\n     position: absolute;\r\n     right: 2em;\r\n     top: 0.8em;\r\n   }\r\n  }\r\n`\r\nfunction Rules() {\r\n  const [visible, setVisible] = useState(false);\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <RulesStyled visible={visible} >\r\n      {\r\n        (visible) && (\r\n          <div className='rules-modal'>\r\n            <h2>Rules</h2>\r\n            <img src='./images/image-rules.svg' alt='rules of game' />\r\n            <img className='close-button' onClick={handleToggleClick} src='./images/icon-close.svg' />\r\n          </div>\r\n        )\r\n      }\r\n      <Button onClick={handleToggleClick} className=\"button\" >\r\n        Rules\r\n      </Button>\r\n    </RulesStyled>\r\n  )\r\n}\r\n\r\nexport default Rules;","/* eslint-disable react/jsx-filename-extension */\nimport React, { createContext, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport './App.css';\nimport Header from './components/header';\nimport Wrapper from './components/wrapper';\nimport Table from './components/table';\nimport Rules from './components/rules';\n\nexport const ScoreContext = createContext();\n\nconst AppStyled = styled.main`\n  @font-face {\n    font-family: \"Barlow Semi Condensed\";\n    src: url(\"./fonts/BarlowSemiCondensed-Medium.ttf\");\n  }\n\n  font-family: \"Barlow Semi Condensed\";\n  background-image: radial-gradient(circle at top, #1f3757 20%, #131537 100%);\n  color: white;\n  min-width: 400px;\n  .app-content {\n    padding: 2em;\n    /* min-width: 400px; */\n    min-height: 100vh;\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n`;\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  return (\n    <ScoreContext.Provider value={{\n      score,\n      setScore,\n    }}>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header />\n            <Table />\n            <Rules />\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}